apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.example.maaedupro"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        development {
            getProps('./config/development.props').each { p ->
                buildConfigField 'String', p.key, p.value
            }
            
        }
        staging {
            getProps('./config/staging.props').each { p ->
                buildConfigField 'String', p.key, p.value
            }

        }
        production {
            getProps('./config/production.props').each { p ->
                buildConfigField 'String', p.key, p.value
            }

        }
        uat {
            getProps('./config/uat.props').each { p ->
                buildConfigField 'String', p.key, p.value
            }


        }
    }

    compileOptions {
        targetCompatibility javaCompatibilityVersion
        sourceCompatibility javaCompatibilityVersion
    }
}


def getProps(path) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(path)))
    return props
}

android.variantFilter { variant ->
    if ((variant.buildType.name == 'release' && (variant.getFlavors().get(0).name == 'development'
            || variant.getFlavors().get(0).name == 'staging')) || (variant.buildType.name == 'debug' &&
            variant.getFlavors().get(0).name == 'production')) {
        variant.setIgnore(true)
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


    //Gson
    implementation "com.google.code.gson:gson:$gsonLibVersion"


    //Native/Support Libraries


    //Native/Support Libraries
    implementation "com.android.support:support-v4:$supportLibVersion"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation "com.android.support:support-annotations:$supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'



    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitLibVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitLibVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorLibVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitLibVersion"

    //RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaLibVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxJavaAndroidLibVersion"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rxJavaAdapterLibVersion"

    //Architecture Components: ViewModel, Room
    implementation "android.arch.lifecycle:extensions:$lifecycleComponentVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycleComponentVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$roomVersion"
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    implementation "android.arch.persistence.room:rxjava2:$roomVersion"




    //Glide
    implementation "com.github.bumptech.glide:glide:$glideLibVersion"

    //File Picker
    implementation "com.kbeanie:multipicker:$multipickerLibVersion"

    //Loader
    implementation "com.wang.avi:library:$loaderVersion"


    //Google
    implementation "com.google.android.gms:play-services-location:$playServicesVersion"
    implementation "com.google.android.gms:play-services-places:$playServicesVersion"
    implementation "com.google.firebase:firebase-core:$firebaseCoreVersion"
    implementation "com.google.firebase:firebase-messaging:$fcmVersion"
    implementation "com.google.android:flexbox:$googleFlexboxVersion"


    //Gif Renderer
    implementation "pl.droidsonroids.gif:android-gif-drawable:$gifLibVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
